name: Issue Report Generator

on:
  workflow_call:
    inputs:
        configName:
          description: 'Base name of the config without json qualifier.'
          required: true
          type: string
        # TODO: this could escape the root.
        reportFolderRelativePath:
          description: 'Folder to look for latest cached result in.'
          required: true
          type: string
        oldConfigDate:
          description: 'Optional. Name of the report in reportFolderRelativePath to use as the base cache report. If passed, results are only available as a pipeline artifact.'
          required: false
          type: string

permissions:
  issues: read
  contents: write
  actions: none
  checks: none
  deployments: none
  packages: none
  repository-projects: none

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Validate Inputs
      id: validate-inputs
      run: |
        if [ -n "${{ inputs.oldConfigName }}" ]; then
          file="${{ inputs.oldConfigName }}"
          [ ! -f $file ] && echo "Cached result \"$file\" not found" && exit 1
        else
          file=$(find ${{ inputs.reportFolderRelativePath }} -maxdepth 1 -type d | sort -r | head -1)
          file=$(find $file -maxdepth 1 -name *-cache.json | sort -r | head -1)
          [ -z "$file" ] && echo "No cached result found."
        fi
        [ -n "$file" ] && echo "Using cached result: \"$file\""
        echo "Using config: \"Configs/${{ inputs.configName }}.json\""
        echo "file=$file" >> $GITHUB_OUTPUT
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Build
      run: |
        dotnet run -c release -- generate-all-reports "Configs/${{ inputs.configName }}.json" "${{ steps.validate-inputs.outputs.file }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Get new report name
      id: calculate-name
      run: |
        report=$(find ${{ inputs.reportFolderRelativePath }} -maxdepth 1 -type d | sort -r | head -1)
        echo "Found report folder: \"$report\""
        echo "report=$report" >> $GITHUB_OUTPUT
    - name: Copy New Full Report
      if: ${{ inputs.oldConfigName == '' }}
      run: |
        mv ${{ steps.calculate-name.outputs.report }}/*-full.md ${{ inputs.reportFolderRelativePath }}
    - name: Upload Results
      if: ${{ inputs.oldConfigName == '' }}
      run: |
        git add *reports
        git -c user.name="Report Generator" -c user.email="juan@hoyosjs.com" commit -m "Add report for diagnostics $(date +'%Y-%m-%d')"
        git push
    - name: Upload Results as pipeline artifact
      if: ${{ inputs.oldConfigName != '' }}
      uses: actions/upload-artifact@v3.1.2
      with:
        name: report
        path: ${{ steps.calculate-name.outputs.report }}
        if-no-files-found: error
        retention-days: 5
